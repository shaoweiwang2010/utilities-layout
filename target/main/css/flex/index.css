/** @define utilities */

.u-flex {
  display: flex !important;
}

.u-flex-bullseye {
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
}

.u-flex-inline {
  display: inline-flex !important;
}

.u-flex-row {
  flex-direction: row !important;
}

.u-flex-row-reverse {
  flex-direction: row-reverse !important;
}

.u-flex-column {
  flex-direction: column !important;
}

.u-flex-column-reverse {
  flex-direction: column-reverse !important;
}

.u-flex-wrap {
  flex-wrap: wrap !important;
}

.u-flex-no-wrap {
  flex-wrap: nowrap !important;
}

.u-flex-wrap-reverse {
  flex-wrap: wrap-reverse !important;
}

.u-flex-justify-start {
  justify-content: flex-start !important;
}

.u-flex-justify-end {
  justify-content: flex-end !important;
}

.u-flex-justify-center {
  justify-content: center !important;
}

.u-flex-justify-between {
  justify-content: space-between !important;
}

.u-flex-justify-around {
  justify-content: space-around !important;
}

.u-flex-align-items-start {
  align-items: flex-start !important;
}

.u-flex-align-items-end {
  align-items: flex-end !important;
}

.u-flex-align-items-center {
  align-items: center !important;
}

.u-flex-align-items-stretch {
  align-items: stretch !important;
}

.u-flex-align-items-baseline {
  align-items: baseline !important;
}

.u-flex-align-content-start {
  align-content: flex-start !important;
}

.u-flex-align-content-end {
  align-content: flex-end !important;
}

.u-flex-align-content-center {
  align-content: center !important;
}

.u-flex-align-content-stretch {
  align-content: stretch !important;
}

.u-flex-align-content-between {
  align-content: space-between !important;
}

.u-flex-align-content-around {
  align-content: space-around !important;
}

.u-flex-align-self-start {
  align-self: flex-start !important;
}

.u-flex-align-self-end {
  align-self: flex-end !important;
}

.u-flex-align-self-center {
  align-self: center !important;
}

.u-flex-align-self-stretch {
  align-self: stretch !important;
}

.u-flex-align-self-baseline {
  align-self: baseline !important;
}

.u-flex-align-self-auto {
  align-self: auto !important;
}

.u-flex-order-first {
  order: -1 !important;
}

.u-flex-order-last {
  order: 1 !important;
}

.u-flex-order-none {
  order: 0 !important;
}

.u-flex-grow1 {
    flex: 1 1 0% !important;
  }

.u-flex-grow2 {
    flex: 2 1 0% !important;
  }

.u-flex-grow3 {
    flex: 3 1 0% !important;
  }

.u-flex-grow4 {
    flex: 4 1 0% !important;
  }

.u-flex-grow5 {
    flex: 5 1 0% !important;
  }

.u-flex-grow6 {
    flex: 6 1 0% !important;
  }

.u-flex-grow7 {
    flex: 7 1 0% !important;
  }

.u-flex-grow8 {
    flex: 8 1 0% !important;
  }

.u-flex-grow9 {
    flex: 9 1 0% !important;
  }

.u-flex-grow10 {
    flex: 10 1 0% !important;
  }

.u-flex-shrink0 {
    flex-shrink: 0 !important;
  }

.u-flex-shrink1 {
    flex-shrink: 1 !important;
  }

.u-flex-shrink2 {
    flex-shrink: 2 !important;
  }

.u-flex-shrink3 {
    flex-shrink: 3 !important;
  }

.u-flex-shrink4 {
    flex-shrink: 4 !important;
  }

.u-flex-shrink5 {
    flex-shrink: 5 !important;
  }

.u-flex-shrink6 {
    flex-shrink: 6 !important;
  }

.u-flex-shrink7 {
    flex-shrink: 7 !important;
  }

.u-flex-shrink8 {
    flex-shrink: 8 !important;
  }

.u-flex-shrink9 {
    flex-shrink: 9 !important;
  }

.u-flex-shrink10 {
    flex-shrink: 10 !important;
  }

.u-flex-expand {
  margin: auto !important;
}

.u-flex-expand-left {
  margin-left: auto !important;
}

.u-flex-expand-right {
  margin-right: auto !important;
}

.u-flex-expand-top {
  margin-top: auto !important;
}

.u-flex-expand-bottom {
  margin-bottom: auto !important;
}

.u-flex-basis-auto {
  flex-basis: auto !important;
}

.u-flex-basis0 {
  flex-basis: 0 !important;
}

/*
   * Shorthand
   *
   * Declares all values instead of keywords like 'initial' to work around IE10
   * https://www.w3.org/TR/css-flexbox-1/#flex-common
   *
   * 1. Fixes issue in IE 10 where flex-basis is ignored - https://git.io/vllMt
   *    This ensures it overrides flex-basis set in other utilities.
   */

/*
   * Sizes the item based on the width/height properties
   */

.u-flex-initial {
  flex: 0 1 auto !important;
  flex-basis: auto !important;
  /* 1 */
}

/*
   * Sizes the item based on the width/height properties, but makes them fully
   * flexible, so that they absorb any free space along the main axis.
   */

.u-flex-auto {
  flex: 1 1 auto !important;
  flex-basis: auto !important;
  /* 1 */
}

/*
   * Sizes the item according to the width/height properties, but makes the flex
   * item fully inflexible. Similar to initial, except that flex items are
   * not allowed to shrink, even in overflow situations.
   */

.u-flex-none {
  flex: 0 0 auto !important;
  flex-basis: auto !important;
  /* 1 */
}

/** @define utilities */

/*! superflycss/variables-dimension | MIT License | https://github.com/superflycss/variables-dimension/blob/master/LICENSE.md */

/*! bootstrap v4.0.0-alpha | MIT License | https://github.com/twbs/bootstrap/blob/master/LICENSE */

/*
=======================================
 DIMENSION VARIABLES
=======================================
 0:  Spacers.
 1:  Borders.
 2:  Z-Index
 3:  Default Media Breakpoints
================================
*/

/* 0 */

/* 1 */

/* 2 */

/* 3 */

/**
 * Flex Container Level Utilities
 */

@media (min-width: 576px) {
  .u-sm-flex {
    display: flex !important;
  }
  .u-sm-flex-bullseye {
    display: flex !important;
    justify-content: center !important;
    align-items: center !important;
  }
  .u-sm-flex-inline {
    display: inline-flex !important;
  }

  .u-sm-flex-row {
    flex-direction: row !important;
  }

  .u-sm-flex-row-reverse {
    flex-direction: row-reverse !important;
  }

  .u-sm-flex-column {
    flex-direction: column !important;
  }

  .u-sm-flex-column-reverse {
    flex-direction: column-reverse !important;
  }

  .u-sm-flex-wrap {
    flex-wrap: wrap !important;
  }

  .u-sm-flex-no-wrap {
    flex-wrap: nowrap !important;
  }

  .u-sm-flex-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }

  .u-sm-flex-justify-start {
    justify-content: flex-start !important;
  }

  .u-sm-flex-justify-end {
    justify-content: flex-end !important;
  }

  .u-sm-flex-justify-center {
    justify-content: center !important;
  }

  .u-sm-flex-justify-between {
    justify-content: space-between !important;
  }

  .u-sm-flex-justify-around {
    justify-content: space-around !important;
  }

  .u-sm-flex-align-items-start {
    align-items: flex-start !important;
  }

  .u-sm-flex-align-items-end {
    align-items: flex-end !important;
  }

  .u-sm-flex-align-items-center {
    align-items: center !important;
  }

  .u-sm-flex-align-items-stretch {
    align-items: stretch !important;
  }

  .u-sm-flex-align-items-baseline {
    align-items: baseline !important;
  }

  .u-sm-flex-align-content-start {
    align-content: flex-start !important;
  }

  .u-sm-flex-align-content-end {
    align-content: flex-end !important;
  }

  .u-sm-flex-align-content-center {
    align-content: center !important;
  }

  .u-sm-flex-align-content-stretch {
    align-content: stretch !important;
  }

  .u-sm-flex-align-content-between {
    align-content: space-between !important;
  }

  .u-sm-flex-align-content-around {
    align-content: space-around !important;
  }

  .u-sm-flex-align-self-start {
    align-self: flex-start !important;
  }

  .u-sm-flex-align-self-end {
    align-self: flex-end !important;
  }

  .u-sm-flex-align-self-center {
    align-self: center !important;
  }

  .u-sm-flex-align-self-stretch {
    align-self: stretch !important;
  }

  .u-sm-flex-align-self-baseline {
    align-self: baseline !important;
  }

  .u-sm-flex-align-self-auto {
    align-self: auto !important;
  }

  .u-sm-flex-order-first {
    order: -1 !important;
  }

  .u-sm-flex-order-last {
    order: 1 !important;
  }

  .u-sm-flex-order-none {
    order: 0 !important;
  }
    .u-sm-flex-grow1 {
      flex: 1 1 0% !important;
    }
    .u-sm-flex-grow2 {
      flex: 2 1 0% !important;
    }
    .u-sm-flex-grow3 {
      flex: 3 1 0% !important;
    }
    .u-sm-flex-grow4 {
      flex: 4 1 0% !important;
    }
    .u-sm-flex-grow5 {
      flex: 5 1 0% !important;
    }
    .u-sm-flex-grow6 {
      flex: 6 1 0% !important;
    }
    .u-sm-flex-grow7 {
      flex: 7 1 0% !important;
    }
    .u-sm-flex-grow8 {
      flex: 8 1 0% !important;
    }
    .u-sm-flex-grow9 {
      flex: 9 1 0% !important;
    }
    .u-sm-flex-grow10 {
      flex: 10 1 0% !important;
    }
    .u-sm-flex-shrink0 {
      flex-shrink: 0 !important;
    }
    .u-sm-flex-shrink1 {
      flex-shrink: 1 !important;
    }
    .u-sm-flex-shrink2 {
      flex-shrink: 2 !important;
    }
    .u-sm-flex-shrink3 {
      flex-shrink: 3 !important;
    }
    .u-sm-flex-shrink4 {
      flex-shrink: 4 !important;
    }
    .u-sm-flex-shrink5 {
      flex-shrink: 5 !important;
    }
    .u-sm-flex-shrink6 {
      flex-shrink: 6 !important;
    }
    .u-sm-flex-shrink7 {
      flex-shrink: 7 !important;
    }
    .u-sm-flex-shrink8 {
      flex-shrink: 8 !important;
    }
    .u-sm-flex-shrink9 {
      flex-shrink: 9 !important;
    }
    .u-sm-flex-shrink10 {
      flex-shrink: 10 !important;
    }

  .u-sm-flex-expand {
    margin: auto !important;
  }

  .u-sm-flex-expand-left {
    margin-left: auto !important;
  }

  .u-sm-flex-expand-right {
    margin-right: auto !important;
  }

  .u-sm-flex-expand-top {
    margin-top: auto !important;
  }

  .u-sm-flex-expand-bottom {
    margin-bottom: auto !important;
  }

  .u-sm-flex-basis-auto {
    flex-basis: auto !important;
  }

  .u-sm-flex-basis0 {
    flex-basis: 0 !important;
  }


  /*
     * Shorthand
     *
     * Declares all values instead of keywords like 'initial' to work around IE10
     * https://www.w3.org/TR/css-flexbox-1/#flex-common
     *
     * 1. Fixes issue in IE 10 where flex-basis is ignored - https://git.io/vllMt
     *    This ensures it overrides flex-basis set in other utilities.
     */


  /*
     * Sizes the item based on the width/height properties
     */

  .u-sm-flex-initial {
    flex: 0 1 auto !important;
    flex-basis: auto !important;
    /* 1 */
  }


  /*
     * Sizes the item based on the width/height properties, but makes them fully
     * flexible, so that they absorb any free space along the main axis.
     */

  .u-sm-flex-auto {
    flex: 1 1 auto !important;
    flex-basis: auto !important;
    /* 1 */
  }


  /*
     * Sizes the item according to the width/height properties, but makes the flex
     * item fully inflexible. Similar to initial, except that flex items are
     * not allowed to shrink, even in overflow situations.
     */

  .u-sm-flex-none {
    flex: 0 0 auto !important;
    flex-basis: auto !important;
    /* 1 */
  }
}

/** @define utilities */

/**
 * Flex Container Level Utilities
 */

@media (min-width: 768px) {
  .u-md-flex {
    display: flex !important;
  }
  .u-md-flex-bullseye {
    display: flex !important;
    justify-content: center !important;
    align-items: center !important;
  }
  .u-md-flex-inline {
    display: inline-flex !important;
  }

  .u-md-flex-row {
    flex-direction: row !important;
  }

  .u-md-flex-row-reverse {
    flex-direction: row-reverse !important;
  }

  .u-md-flex-column {
    flex-direction: column !important;
  }

  .u-md-flex-column-reverse {
    flex-direction: column-reverse !important;
  }

  .u-md-flex-wrap {
    flex-wrap: wrap !important;
  }

  .u-md-flex-no-wrap {
    flex-wrap: nowrap !important;
  }

  .u-md-flex-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }

  .u-md-flex-justify-start {
    justify-content: flex-start !important;
  }

  .u-md-flex-justify-end {
    justify-content: flex-end !important;
  }

  .u-md-flex-justify-center {
    justify-content: center !important;
  }

  .u-md-flex-justify-between {
    justify-content: space-between !important;
  }

  .u-md-flex-justify-around {
    justify-content: space-around !important;
  }

  .u-md-flex-align-items-start {
    align-items: flex-start !important;
  }

  .u-md-flex-align-items-end {
    align-items: flex-end !important;
  }

  .u-md-flex-align-items-center {
    align-items: center !important;
  }

  .u-md-flex-align-items-stretch {
    align-items: stretch !important;
  }

  .u-md-flex-align-items-baseline {
    align-items: baseline !important;
  }

  .u-md-flex-align-content-start {
    align-content: flex-start !important;
  }

  .u-md-flex-align-content-end {
    align-content: flex-end !important;
  }

  .u-md-flex-align-content-center {
    align-content: center !important;
  }

  .u-md-flex-align-content-stretch {
    align-content: stretch !important;
  }

  .u-md-flex-align-content-between {
    align-content: space-between !important;
  }

  .u-md-flex-align-content-around {
    align-content: space-around !important;
  }

  .u-md-flex-align-self-start {
    align-self: flex-start !important;
  }

  .u-md-flex-align-self-end {
    align-self: flex-end !important;
  }

  .u-md-flex-align-self-center {
    align-self: center !important;
  }

  .u-md-flex-align-self-stretch {
    align-self: stretch !important;
  }

  .u-md-flex-align-self-baseline {
    align-self: baseline !important;
  }

  .u-md-flex-align-self-auto {
    align-self: auto !important;
  }

  .u-md-flex-order-first {
    order: -1 !important;
  }

  .u-md-flex-order-last {
    order: 1 !important;
  }

  .u-md-flex-order-none {
    order: 0 !important;
  }
    .u-md-flex-grow1 {
      flex: 1 1 0% !important;
    }
    .u-md-flex-grow2 {
      flex: 2 1 0% !important;
    }
    .u-md-flex-grow3 {
      flex: 3 1 0% !important;
    }
    .u-md-flex-grow4 {
      flex: 4 1 0% !important;
    }
    .u-md-flex-grow5 {
      flex: 5 1 0% !important;
    }
    .u-md-flex-grow6 {
      flex: 6 1 0% !important;
    }
    .u-md-flex-grow7 {
      flex: 7 1 0% !important;
    }
    .u-md-flex-grow8 {
      flex: 8 1 0% !important;
    }
    .u-md-flex-grow9 {
      flex: 9 1 0% !important;
    }
    .u-md-flex-grow10 {
      flex: 10 1 0% !important;
    }
    .u-md-flex-shrink0 {
      flex-shrink: 0 !important;
    }
    .u-md-flex-shrink1 {
      flex-shrink: 1 !important;
    }
    .u-md-flex-shrink2 {
      flex-shrink: 2 !important;
    }
    .u-md-flex-shrink3 {
      flex-shrink: 3 !important;
    }
    .u-md-flex-shrink4 {
      flex-shrink: 4 !important;
    }
    .u-md-flex-shrink5 {
      flex-shrink: 5 !important;
    }
    .u-md-flex-shrink6 {
      flex-shrink: 6 !important;
    }
    .u-md-flex-shrink7 {
      flex-shrink: 7 !important;
    }
    .u-md-flex-shrink8 {
      flex-shrink: 8 !important;
    }
    .u-md-flex-shrink9 {
      flex-shrink: 9 !important;
    }
    .u-md-flex-shrink10 {
      flex-shrink: 10 !important;
    }

  .u-md-flex-expand {
    margin: auto !important;
  }

  .u-md-flex-expand-left {
    margin-left: auto !important;
  }

  .u-md-flex-expand-right {
    margin-right: auto !important;
  }

  .u-md-flex-expand-top {
    margin-top: auto !important;
  }

  .u-md-flex-expand-bottom {
    margin-bottom: auto !important;
  }

  .u-md-flex-basis-auto {
    flex-basis: auto !important;
  }

  .u-md-flex-basis0 {
    flex-basis: 0 !important;
  }


  /*
     * Shorthand
     *
     * Declares all values instead of keywords like 'initial' to work around IE10
     * https://www.w3.org/TR/css-flexbox-1/#flex-common
     *
     * 1. Fixes issue in IE 10 where flex-basis is ignored - https://git.io/vllMt
     *    This ensures it overrides flex-basis set in other utilities.
     */


  /*
     * Sizes the item based on the width/height properties
     */

  .u-md-flex-initial {
    flex: 0 1 auto !important;
    flex-basis: auto !important;
    /* 1 */
  }


  /*
     * Sizes the item based on the width/height properties, but makes them fully
     * flexible, so that they absorb any free space along the main axis.
     */

  .u-md-flex-auto {
    flex: 1 1 auto !important;
    flex-basis: auto !important;
    /* 1 */
  }


  /*
     * Sizes the item according to the width/height properties, but makes the flex
     * item fully inflexible. Similar to initial, except that flex items are
     * not allowed to shrink, even in overflow situations.
     */

  .u-md-flex-none {
    flex: 0 0 auto !important;
    flex-basis: auto !important;
    /* 1 */
  }
}

/** @define utilities */

/**
 * Flex Container Level Utilities
 */

@media (min-width: 992px) {
  .u-lg-flex {
    display: flex !important;
  }
  .u-lg-flex-bullseye {
    display: flex !important;
    justify-content: center !important;
    align-items: center !important;
  }  
  .u-lg-flex-inline {
    display: inline-flex !important;
  }

  .u-lg-flex-row {
    flex-direction: row !important;
  }

  .u-lg-flex-row-reverse {
    flex-direction: row-reverse !important;
  }

  .u-lg-flex-column {
    flex-direction: column !important;
  }

  .u-lg-flex-column-reverse {
    flex-direction: column-reverse !important;
  }

  .u-lg-flex-wrap {
    flex-wrap: wrap !important;
  }

  .u-lg-flex-no-wrap {
    flex-wrap: nowrap !important;
  }

  .u-lg-flex-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }

  .u-lg-flex-justify-start {
    justify-content: flex-start !important;
  }

  .u-lg-flex-justify-end {
    justify-content: flex-end !important;
  }

  .u-lg-flex-justify-center {
    justify-content: center !important;
  }

  .u-lg-flex-justify-between {
    justify-content: space-between !important;
  }

  .u-lg-flex-justify-around {
    justify-content: space-around !important;
  }

  .u-lg-flex-align-items-start {
    align-items: flex-start !important;
  }

  .u-lg-flex-align-items-end {
    align-items: flex-end !important;
  }

  .u-lg-flex-align-items-center {
    align-items: center !important;
  }

  .u-lg-flex-align-items-stretch {
    align-items: stretch !important;
  }

  .u-lg-flex-align-items-baseline {
    align-items: baseline !important;
  }

  .u-lg-flex-align-content-start {
    align-content: flex-start !important;
  }

  .u-lg-flex-align-content-end {
    align-content: flex-end !important;
  }

  .u-lg-flex-align-content-center {
    align-content: center !important;
  }

  .u-lg-flex-align-content-stretch {
    align-content: stretch !important;
  }

  .u-lg-flex-align-content-between {
    align-content: space-between !important;
  }

  .u-lg-flex-align-content-around {
    align-content: space-around !important;
  }

  .u-lg-flex-align-self-start {
    align-self: flex-start !important;
  }

  .u-lg-flex-align-self-end {
    align-self: flex-end !important;
  }

  .u-lg-flex-align-self-center {
    align-self: center !important;
  }

  .u-lg-flex-align-self-stretch {
    align-self: stretch !important;
  }

  .u-lg-flex-align-self-baseline {
    align-self: baseline !important;
  }

  .u-lg-flex-align-self-auto {
    align-self: auto !important;
  }

  .u-lg-flex-order-first {
    order: -1 !important;
  }

  .u-lg-flex-order-last {
    order: 1 !important;
  }

  .u-lg-flex-order-none {
    order: 0 !important;
  }
    .u-lg-flex-grow1 {
      flex: 1 1 0% !important;
    }
    .u-lg-flex-grow2 {
      flex: 2 1 0% !important;
    }
    .u-lg-flex-grow3 {
      flex: 3 1 0% !important;
    }
    .u-lg-flex-grow4 {
      flex: 4 1 0% !important;
    }
    .u-lg-flex-grow5 {
      flex: 5 1 0% !important;
    }
    .u-lg-flex-grow6 {
      flex: 6 1 0% !important;
    }
    .u-lg-flex-grow7 {
      flex: 7 1 0% !important;
    }
    .u-lg-flex-grow8 {
      flex: 8 1 0% !important;
    }
    .u-lg-flex-grow9 {
      flex: 9 1 0% !important;
    }
    .u-lg-flex-grow10 {
      flex: 10 1 0% !important;
    }
    .u-lg-flex-shrink0 {
      flex-shrink: 0 !important;
    }
    .u-lg-flex-shrink1 {
      flex-shrink: 1 !important;
    }
    .u-lg-flex-shrink2 {
      flex-shrink: 2 !important;
    }
    .u-lg-flex-shrink3 {
      flex-shrink: 3 !important;
    }
    .u-lg-flex-shrink4 {
      flex-shrink: 4 !important;
    }
    .u-lg-flex-shrink5 {
      flex-shrink: 5 !important;
    }
    .u-lg-flex-shrink6 {
      flex-shrink: 6 !important;
    }
    .u-lg-flex-shrink7 {
      flex-shrink: 7 !important;
    }
    .u-lg-flex-shrink8 {
      flex-shrink: 8 !important;
    }
    .u-lg-flex-shrink9 {
      flex-shrink: 9 !important;
    }
    .u-lg-flex-shrink10 {
      flex-shrink: 10 !important;
    }

  .u-lg-flex-expand {
    margin: auto !important;
  }

  .u-lg-flex-expand-left {
    margin-left: auto !important;
  }

  .u-lg-flex-expand-right {
    margin-right: auto !important;
  }

  .u-lg-flex-expand-top {
    margin-top: auto !important;
  }

  .u-lg-flex-expand-bottom {
    margin-bottom: auto !important;
  }

  .u-lg-flex-basis-auto {
    flex-basis: auto !important;
  }

  .u-lg-flex-basis0 {
    flex-basis: 0 !important;
  }


  /*
     * Shorthand
     *
     * Declares all values instead of keywords like 'initial' to work around IE10
     * https://www.w3.org/TR/css-flexbox-1/#flex-common
     *
     * 1. Fixes issue in IE 10 where flex-basis is ignored - https://git.io/vllMt
     *    This ensures it overrides flex-basis set in other utilities.
     */


  /*
     * Sizes the item based on the width/height properties
     */

  .u-lg-flex-initial {
    flex: 0 1 auto !important;
    flex-basis: auto !important;
    /* 1 */
  }


  /*
     * Sizes the item based on the width/height properties, but makes them fully
     * flexible, so that they absorb any free space along the main axis.
     */

  .u-lg-flex-auto {
    flex: 1 1 auto !important;
    flex-basis: auto !important;
    /* 1 */
  }


  /*
     * Sizes the item according to the width/height properties, but makes the flex
     * item fully inflexible. Similar to initial, except that flex items are
     * not allowed to shrink, even in overflow situations.
     */

  .u-lg-flex-none {
    flex: 0 0 auto !important;
    flex-basis: auto !important;
    /* 1 */
  }
}