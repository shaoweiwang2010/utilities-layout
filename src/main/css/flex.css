/** @define utilities */
@import "@superflycss/variables-layout";

.u-flex {
  @apply(--u-flex) !important;
}

.u-inline-flex {
  @apply(--u-inline-flex) !important;
}

.u-flex-row {
  @apply(--u-flex-row) !important;
}

.u-flex-row-reverse {
  @apply(--u-flex-row-reverse) !important;
}

.u-flex-column {
  @apply(--u-flex-column) !important;
}

.u-flex-column-reverse {
  @apply(--u-flex-column-reverse) !important;
}

.u-flex-wrap {
  @apply(--u-flex-wrap) !important;
}

.u-flex-no-wrap {
  @apply(--u-flex-no-wrap) !important;
}

.u-flex-wrap-reverse {
  @apply(--u-flex-wrap-reverse) !important;
}

.u-flex-justify-start {
  @apply(--u-flex-justify-start) !important;
}

.u-flex-justify-end {
  @apply(--u-flex-justify-end) !important;
}

.u-flex-justify-center {
  @apply(--u-flex-justify-center) !important;
}

.u-flex-justify-between {
  @apply(--u-flex-justify-between) !important;
}

.u-flex-justify-around {
  @apply(--u-flex-justify-around) !important;
}

.u-flex-align-items-start {
  @apply(--u-flex-align-items-start) !important;
}

.u-flex-align-items-end {
  @apply(--u-flex-align-items-end) !important;
}

.u-flex-align-items-center {
  @apply(--u-flex-align-items-center) !important;
}

.u-flex-align-items-stretch {
  @apply(--u-flex-align-items-stretch) !important;
}

.u-flex-align-items-baseline {
  @apply(--u-flex-align-items-baseline) !important;
}

.u-flex-align-content-start {
  @apply(--u-flex-align-content-start) !important;
}

.u-flex-align-content-end {
  @apply(--u-flex-align-content-end) !important;
}

.u-flex-align-content-center {
  @apply(--u-flex-align-content-center) !important;
}

.u-flex-align-content-stretch {
  @apply(--u-flex-align-content-stretch) !important;
}

.u-flex-align-content-between {
  @apply(--u-flex-align-content-between) !important;
}

.u-flex-align-content-around {
  @apply(--u-flex-align-content-around) !important;
}

/* Applies to flex items
   ========================================================================== */

/**
 * Override default alignment of single item when specified by `align-items`
 */

.u-flex-align-self-start {
  @apply(--u-flex-align-self-start) !important;
}

.u-flex-align-self-end {
  @apply(--u-flex-align-self-end) !important;
}

.u-flex-align-self-center {
  @apply(--u-flex-align-self-center) !important;
}

.u-flex-align-self-stretch {
  @apply(--u-flex-align-self-stretch) !important;
}

.u-flex-align-self-baseline {
  @apply(--u-flex-align-self-baseline) !important;
}

.u-flex-align-self-auto {
  @apply(--u-flex-align-self-auto) !important;
}

.u-flex-order-first {
  @apply(--u-flex-order-first) !important;
}

.u-flex-order-last {
  @apply(--u-flex-order-last) !important;
}

.u-flex-order-none {
  @apply(--u-flex-order-none) !important;
}

/**
 * Specify the flex grow factor, which determines how much the flex item will
 * grow relative to the rest of the flex items in the flex container.
 *
 * Supports 1-5 proportions
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    - http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis. Using this
 *    instead of `auto` as this matches what the default would be with `flex`
 *    shorthand - http://git.io/vllWx
 */

 /* 1 */
 @for $factor from 1 to 5 {
   .u-flex-grow$(factor) {
     @apply(--u-flex-grow$(factor)) !important;
   }
 }

/**
 * Specify the flex shrink factor, which determines how much the flex item will
 * shrink relative to the rest of the flex items in the flex container.
 */

 @for $factor from 0 to 5 {
   .u-flex-shrink$(factor) {
     @apply(--u-flex-shrink$(factor)) !important;
   }
 }


/**
 * Aligning with `auto` margins
 * http://www.w3.org/TR/css-flexbox-1/#auto-margins
 */

.u-flex-expand {
  @apply(--u-flex-expand) !important;
}

.u-flex-expand-left {
  @apply(--u-flex-expand-left) !important;
}

.u-flex-expand-right {
  @apply(--u-flex-expand-right) !important;
}

.u-flex-expand-top {
  @apply(--u-flex-expand-top) !important;
}

.u-flex-expand-bottom {
  @apply(--u-flex-expand-bottom) !important;
}

/**
 * Basis
 */

.u-flex-basis-auto {
  @apply(--u-flex-basis-auto) !important;
}

.u-flex-basis0 {
  @apply(--u-flex-basis0) !important;
}

/*
 * Shorthand
 *
 * Declares all values instead of keywords like 'initial' to work around IE10
 * https://www.w3.org/TR/css-flexbox-1/#flex-common
 *
 * 1. Fixes issue in IE 10 where flex-basis is ignored - https://git.io/vllMt
 *    This ensures it overrides flex-basis set in other utilities.
 */

/*
 * Sizes the item based on the width/height properties
 */

.u-flex-initial {
  flex: 0 1 auto !important;
  flex-basis: auto !important; /* 1 */
}

/*
 * Sizes the item based on the width/height properties, but makes them fully
 * flexible, so that they absorb any free space along the main axis.
 */

.u-flex-auto {
  flex: 1 1 auto !important;
  flex-basis: auto !important; /* 1 */
}

/*
 * Sizes the item according to the width/height properties, but makes the flex
 * item fully inflexible. Similar to initial, except that flex items are
 * not allowed to shrink, even in overflow situations.
 */

.u-flex-none {
  flex: 0 0 auto !important;
  flex-basis: auto !important; /* 1 */
}
